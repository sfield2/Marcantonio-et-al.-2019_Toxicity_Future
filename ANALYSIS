### Script for all anlyses written by Sean Field M.A., reported in
### R. Marcantonio, S. Field, P. Regan. 2019. TITLE> PLOS ONE

####### NECESSARY LIBRARIES AND LIBRARIES THAT WILL BE USEFUL FOR ADDITIONAL ANALYSES & PLOTTING
library('units')
library('sf')
library('sp')
library('rgdal')
library('dplyr')
library('measurements')
library('raster')
library('rgeos')
library('spdep')
library('maptools')
library('ggplot2')

######## READ DATA  ###
sub_tract <- readOGR("C:/Users/username/Documents/projectname/DATA_ACCESS_DIRECTORY",layer="National Census Tract Spatial Data")
cities <- readOGR("C:/Users/username/Documents/projectname/DATA_ACCESS_DIRECTORY",layer="UAA Spatial Data")
UAA_sub <- read.csv("C:/Users/username/Documents/projectname/DATA_ACCESS_DIRECTORY/UAA Social Data.csv",header=T)
UAA_flood <- read.csv("C:/Users/username/Documents/projectname/DATA_ACCESS_DIRECTORY/UAA Flood Data.csv", header=T)

# Contaminated site data is present on Cleanup In My Community Website, however it is difficult to sort and the database does 
# not contain the data necessary to filter based on specifications like 'types of grant/remeditation efforts/etc'
# However, you can sort based on those specifications on the CIMC webpage.
# BUT if you do this, sometimes lat/long data will not be included in subset data, so you will need to import the subset data.CSV 
# and use it as a filter for the ALL_site list which should download with correct spatial data
# We have done this below, to give an example, and the data we used is in repository -> branch 'Data for replication'

allcontaminatedsites <- read.csv("C:/Users/username/Documents/projectname/DATA_ACCESS_DIRECTORY/Contamined sites.csv",header=T)
ALL_datum <- matrix(NA,nrow=nrow(allcontaminatedsites),ncol=2)
ALL_datum[,1]<-ALL$Longitude
ALL_datum[,2]<-ALL$Latitude
ALL_site <- SpatialPointsDataFrame(coords=ALL_datum,ALL,proj4string = CRS('+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0'))
SF <- read.csv("C:/Users/username/Documents/projectname/DATA_ACCESS_DIRECTORY/SUPERFUND_CIMC.csv",header=T)
SF_site <- subset(ALL_site, Map.Site.CSV %in% SF$Map.Site.CSV)
BF <- read.csv("C:/Users/username/Documents/projectname/DATA_ACCESS_DIRECTORY/BROWNFIELD_CIMC.csv",header=T)
BF_site <- subset(ALL_site, Map.Site.CSV %in% BF$Map.Site.CSV)
RCRA <- read.csv("C:/Users/username/Documents/projectname/DATA_ACCESS_DIRECTORY/RCRA_CIMC.csv",header=T)
RCRA_site <- subset(ALL_site, Map.Site.CSV %in% RCRA$Map.Site.CSV)
FC_site <- bind(RCRA_site, BF_site, SF_site)

harvey <- readOGR("C:/Users/seanp/Documents/R/ENVIRON/DATA",layer="houston_flood_boundaries")
harvey_CRS <-spTransform(harvey,CRS("+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0"))

sandy <- readOGR("C:/Users/seanp/Documents/R/ENVIRON/DATA",layer="sandy_flood_boundaries")
sandy_CRS <-spTransform(sandy,CRS("+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0"))

#################################################### SORT DATA ########################################################################
# tag all contaminated sites for easy tracking & sorting
# assume number will change as site database expands
site_ID <- c(1:29444)
FC_site_ID <- cbind(FC_site,site_ID)

# delimit USA census tracts by census tracts analyzed by ND GAIN/UAA
sub_tract_UAA <- subset(sub_tract, GEOID_Data %in% UAA_sub$Geo.ID)
sub_ID <- c(1:25569)
sub_tract_ID <- cbind(sub_tract_UAA,sub_ID)

##################################################### ANALYSIS #######################################################################
##### ALL SITES IN UAA SUB  #####
sub_sites <- over(FC_site_ID,sub_tract_UAA)
# NUMBER OF SUBTRACTS
sub_withsites_tot <- sub_sites %>% distinct()
sub_withsites_unique <- sub_withsites_tot[complete.cases(sub_withsites_tot),]
# plotable
sub_with_sites <- subset(sub_tract_UAA, GEOID_Data %in% sub_withsites_unique$GEOID_Data)
writeOGR(sub_with_sites,".","subwithsites",driver='ESRI Shapefile')
# NUMBER OF SITES
sub_sites_ID <- cbind(sub_sites,site_ID)
subsites <- sub_sites_ID[complete.cases(sub_sites_ID),]
# plotable
sites_in_sub <- subset(FC_site_ID, site_ID %in% subsites$site_ID)
#writeOGR(sites_in_sub,".","sitesinsub",driver='ESRI Shapefile')
# SOCIAL VARIABLES
sub_withsites_soc <- subset(UAA_sub, Geo.ID %in% sub_withsites_unique$GEOID_Data)
sum(sub_withsites_soc$Population)
sum(sub_withsites_soc$Population.in.High.Risk.Flood.Zones)
mean(sub_withsites_soc$Median.Household.Income)

# WITH NEIGHBORS
allsubsite_UTM<- spTransform(sub_with_sites,CRS("+proj=utm +datum=NAD83 +zone=12 +ellps=GRS80 +towgs84=0,0,0"))
allsubsite_buff<-gBuffer(allsubsite_UTM,width=1000,byid = TRUE)
all_buff <- spTransform(allsubsite_buff,CRS("+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0"))
all_neighbors <- over(sub_tract_UAA,all_buff)
all_neighbors_ID <-cbind(all_neighbors,sub_ID)
all_neighbors_unique <- all_neighbors_ID[complete.cases(all_neighbors_ID),]
all_neighbors_all <- subset(sub_tract_ID,X1.25569 %in% all_neighbors_unique$sub_ID)
all_neighbors_sub_soc <- subset(UAA_sub, Geo.ID %in% all_neighbors_all$GEOID_Data)
all_neighbors_UAA_poly <- subset(sub_tract_UAA, GEOID_Data %in% all_neighbors_sub_soc$Geo.ID)
# SOCIAL
sum(all_neighbors_sub_soc$Population)
sum(all_neighbors_sub_soc$Population.in.High.Risk.Flood.Zones)
mean(all_neighbors_sub_soc$Median.Household.Income) 

### NEIGHBORS ALONE
only_allneighbors_sub_social <- subset(all_neighbors_sub_soc, !(Geo.ID %in% sub_with_sites$GEOID_Data))
# only_neighbors_poly <- subset(sub_tract_UAA, GEOID_Data %in% only_allneighbors_sub_social$Geo.ID)
# writeOGR(only_neighbors_poly,".","neighbors",driver='ESRI Shapefile')
# SOCIAL
sum(only_allneighbors_sub_social$Population)
sum(only_allneighbors_sub_social$Population.in.High.Risk.Flood.Zones)
mean(only_allneighbors_sub_social$Median.Household.Income)  

####ALL SUBS THAT DO NOT HAVE CONTAMINATED SITE AND ARE NOT A NEIGHBOR ####
sub_far <- subset(UAA_sub, !(Geo.ID %in% all_neighbors_sub_soc$Geo.ID))
# far_sub_poly <- subset(sub_tract_UAA, GEOID_Data %in% sub_far$Geo.ID)
# writeOGR(far_sub_poly,".","farsub",driver='ESRI Shapefile')
sum(sub_far$Population)
sum(sub_far$Population.in.High.Risk.Flood.Zones)
mean(sub_far$Median.Household.Income)

####################################### CENSUS TRACTS IN URBAN AREA WITH FLOOD POTENTIAL IN 2021 #######################################
flood_prob <-subset(UAA_flood, X2021 > 0)
flood_sub <- subset(UAA_sub, Geo.ID.City %in% flood_prob$ï..GEOID)
flood_sub_poly <- subset(sub_tract, GEOID_Data %in% flood_sub$Geo.ID)

### SITES IN UAA SUB WITH PROB OF FLOOD 
sub_flood_sites <- over(FC_site,flood_sub_poly)
# NUMBER OF SUBTRACTS
subflood_withsites_tot <-sub_flood_sites %>% distinct()
subflood_withsites_unique <- subflood_withsites_tot[complete.cases(subflood_withsites_tot),]
# plotable
subflood_sites_poly <- subset(sub_tract_UAA, GEOID_Data %in% subflood_withsites_unique$GEOID_Data)
###### NUMBER OF SITES 
sub_flood_sites_ID <- cbind(sub_flood_sites,site_ID)
sites_in_floodsub <- sub_flood_sites_ID[complete.cases(sub_flood_sites_ID),]
# plotable 
sites_in_floodsub_poly <- subset(FC_site_ID, site_ID %in% sites_in_floodsub$site_ID)
#writeOGR(sites_in_floodsub_poly,".","floodsites2021",driver='ESRI Shapefile')
# plotable
floodsite_poly <- subset(sub_tract, GEOID_Data %in% sites_in_floodsub$GEOID_Data)

# SOCIAL VARIABLES
subflood_withsites_soc <- subset(UAA_sub, Geo.ID %in% subflood_withsites_unique$GEOID_Data)
sum(subflood_withsites_soc$Population)
sum(subflood_withsites_soc$Population.in.High.Risk.Flood.Zones)
mean(subflood_withsites_soc$Median.Household.Income)

#### NEIGHBORS OF SITES IN UAA SUB WITH PROB OF FLOOD 
# buffer census tracts that are in a flood zone in 2021 and have a contaminated site 
subfloodsite_UTM<- spTransform(subflood_sites_poly,CRS("+proj=utm +datum=NAD83 +zone=12 +ellps=GRS80 +towgs84=0,0,0"))
subfloodsite_buff<-gBuffer(subfloodsite_UTM,width=1000,byid = TRUE)
sfs_buff <- spTransform(subfloodsite_buff,CRS("+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0"))
# all neighbor census trats within buffer
neighbors <- over(sub_tract_UAA,sfs_buff)
neighbors_ID<-cbind(neighbors,sub_ID)
neighbors_unique <-neighbors_ID[complete.cases(neighbors_ID),]
neighbors_all <- subset(sub_tract_ID,X1.25569 %in% neighbors_unique$sub_ID)
# neighbor census tract in UAA
neighbor_sub_soc <- subset(UAA_sub, Geo.ID %in% neighbors_all$GEOID_Data)
# plotable
neighbors_UAA_poly <- subset(sub_tract_UAA, GEOID_Data %in% neighbor_sub_soc$Geo.ID)
### NEIGHBORS ALONE
onlyneighbors_sub_social <- subset(neighbor_sub_soc, !(Geo.ID %in% subflood_sites_poly$GEOID_Data))
# SOCIAL
sum(onlyneighbors_sub_social$Population)
sum(onlyneighbors_sub_social$Population.in.High.Risk.Flood.Zones)
mean(onlyneighbors_sub_social$Median.Household.Income) 

####################################### CENSUS TRACTS IN URBAN AREA WITH FLOOD POTENTIAL IN 2031 #######################################
flood_prob31 <-subset(flood, X2031 > 0)
flood_sub31 <- subset(UAA_sub, Geo.ID.City %in% flood_prob31$ï..GEOID)
flood_sub_poly31 <- subset(sub_tract, GEOID_Data %in% flood_sub31$Geo.ID)

sub_flood_sites31 <- over(FC_site,flood_sub_poly31)
subflood_withsites_tot31 <-sub_flood_sites31 %>% distinct()
subflood_withsites_unique31 <- subflood_withsites_tot31[complete.cases(subflood_withsites_tot31),]
subflood_sites_poly31 <- subset(sub_tract_UAA, GEOID_Data %in% subflood_withsites_unique31$GEOID_Data)
sub_flood_sites_ID31 <- cbind(sub_flood_sites31,site_ID)
sites_in_floodsub31 <- sub_flood_sites_ID31[complete.cases(sub_flood_sites_ID31),]
sites_in_floodsub_poly31 <- subset(FC_site_ID, site_ID %in% sites_in_floodsub31$site_ID)
#writeOGR(sites_in_floodsub_poly31,".","floodsites2031",driver='ESRI Shapefile')
floodsite_poly3 <- subset(sub_tract, GEOID_Data %in% sites_in_floodsub31$GEOID_Data)
# SOCIAL
subflood_withsites_soc31 <- subset(UAA_sub, Geo.ID %in% subflood_withsites_unique31$GEOID_Data)
sum(subflood_withsites_soc31$Population)
sum(subflood_withsites_soc31$Population.in.High.Risk.Flood.Zones)
mean(subflood_withsites_soc31$Median.Household.Income)

####NEIGHBORS OF SITES IN UAA SUB WITH PROB OF FLOOD 
subfloodsite_UTM31<- spTransform(subflood_sites_poly31,CRS("+proj=utm +datum=NAD83 +zone=12 +ellps=GRS80 +towgs84=0,0,0"))
subfloodsite_buff31<-gBuffer(subfloodsite_UTM31,width=1000,byid = TRUE)
sfs_buff31 <- spTransform(subfloodsite_buff31,CRS("+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0"))
neighbors31 <- over(sub_tract,sfs_buff31)
neighbors_ID31 <-cbind(neighbors31,sub_ID)
neighbors_all31 <-neighbors_ID31[complete.cases(neighbors_ID31),]
neighbors_poly31 <- subset(sub_tract_ID,X1.74001 %in% neighbors_all31$sub_ID)
neighbor_sub_soc31 <- subset(UAA_sub, Geo.ID %in% neighbors_poly31$GEOID_Data)
neighbors_UAA_poly31 <- subset(sub_tract_UAA, GEOID_Data %in% neighbor_sub_soc31$Geo.ID)
# SOCIAL
sum(neighbor_sub_soc31$Population)
sum(neighbor_sub_soc31$Population.in.High.Risk.Flood.Zones)
mean(neighbor_sub_soc31$Median.Household.Income) 
### NEIGHBORS ALONE
onlyneighbors_sub_social31 <- subset(neighbor_sub_soc31, !(Geo.ID %in% subflood_sites_poly31$GEOID_Data))
# SOCIAL
sum(onlyneighbors_sub_social31$Population)
sum(onlyneighbors_sub_social31$Population.in.High.Risk.Flood.Zones)
mean(onlyneighbors_sub_social31$Median.Household.Income) 

####################################### CENSUS TRACTS IN URBAN AREA WITH FLOOD POTENTIAL IN 2041 #######################################
flood_prob41 <-subset(UAA_flood, X2041 > 0)
flood_sub41 <- subset(UAA_sub, Geo.ID.City %in% flood_prob41$ï..GEOID)
flood_sub_poly41 <- subset(sub_tract, GEOID_Data %in% flood_sub41$Geo.ID)

sub_flood_sites41 <- over(FC_site,flood_sub_poly41)
subflood_withsites_tot41 <-sub_flood_sites41 %>% distinct()
subflood_withsites_unique41 <- subflood_withsites_tot41[complete.cases(subflood_withsites_tot41),]
subflood_sites_poly41 <- subset(sub_tract_UAA, GEOID_Data %in% subflood_withsites_unique41$GEOID_Data)
sub_flood_sites_ID41 <- cbind(sub_flood_sites41,site_ID)
sites_in_floodsub41 <- sub_flood_sites_ID41[complete.cases(sub_flood_sites_ID41),]
sites_in_floodsub_poly41 <- subset(FC_site_ID, site_ID %in% sites_in_floodsub41$site_ID)
#writeOGR(sites_in_floodsub_poly41,".","floodsites2041",driver='ESRI Shapefile')
floodsite_poly41 <- subset(sub_tract, GEOID_Data %in% sites_in_floodsub41$GEOID_Data)
# SOCIAL
subflood_withsites_soc41 <- subset(UAA_sub, Geo.ID %in% subflood_withsites_unique41$GEOID_Data)
sum(subflood_withsites_soc41$Population)
sum(subflood_withsites_soc41$Population.in.High.Risk.Flood.Zones)
mean(subflood_withsites_soc41$Median.Household.Income)

####NEIGHBORS OF SITES IN UAA SUB WITH PROB OF FLOOD 
subfloodsite_UTM41<- spTransform(subflood_sites_poly41,CRS("+proj=utm +datum=NAD83 +zone=12 +ellps=GRS80 +towgs84=0,0,0"))
subfloodsite_buff41<-gBuffer(subfloodsite_UTM41,width=1000,byid = TRUE)
sfs_buff41 <- spTransform(subfloodsite_buff41,CRS("+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0"))
neighbors41 <- over(sub_tract,sfs_buff41)
neighbors_ID41 <-cbind(neighbors41,sub_ID)
neighbors_all41 <-neighbors_ID41[complete.cases(neighbors_ID41),]
neighbors_poly41 <- subset(sub_tract_ID,X1.74001 %in% neighbors_all41$sub_ID)
neighbor_sub_soc41 <- subset(UAA_sub, Geo.ID %in% neighbors_poly41$GEOID_Data)
neighbors_UAA_poly41 <- subset(sub_tract_UAA, GEOID_Data %in% neighbor_sub_soc41$Geo.ID)
# SOCIAL
sum(neighbor_sub_soc41$Population)
sum(neighbor_sub_soc41$Population.in.High.Risk.Flood.Zones)
mean(neighbor_sub_soc41$Median.Household.Income) 
### NEIGHBORS ALONE
onlyneighbors_sub_social41 <- subset(neighbor_sub_soc41, !(Geo.ID %in% subflood_sites_poly41$GEOID_Data))
# SOCIAL
sum(onlyneighbors_sub_social41$Population)
sum(onlyneighbors_sub_social41$Population.in.High.Risk.Flood.Zones)
mean(onlyneighbors_sub_social41$Median.Household.Income) 

####################################### CENSUS TRACTS IN URBAN AREA WITH FLOOD POTENTIAL IN 2051 #######################################
flood_prob51 <-subset(flood, X2051 > 0)
flood_sub51 <- subset(UAA_sub, Geo.ID.City %in% flood_prob51$ï..GEOID)
flood_sub_poly51 <- subset(sub_tract, GEOID_Data %in% flood_sub51$Geo.ID)

sub_flood_sites51 <- over(FC_site,flood_sub_poly51)
subflood_withsites_tot51 <-sub_flood_sites51 %>% distinct()
subflood_withsites_unique51 <- subflood_withsites_tot51[complete.cases(subflood_withsites_tot51),]
subflood_sites_poly51 <- subset(sub_tract_UAA, GEOID_Data %in% subflood_withsites_unique51$GEOID_Data)
#writeOGR(sites_in_floodsub_poly51,".","floodsites2051",driver='ESRI Shapefile')
sub_flood_sites_ID51 <- cbind(sub_flood_sites51,site_ID)
sites_in_floodsub51 <- sub_flood_sites_ID51[complete.cases(sub_flood_sites_ID51),]
sites_in_floodsub_poly51 <- subset(FC_site_ID, site_ID %in% sites_in_floodsub51$site_ID)
floodsite_poly51 <- subset(sub_tract, GEOID_Data %in% sites_in_floodsub51$GEOID_Data)
# SOCIAL
subflood_withsites_soc51 <- subset(UAA_sub, Geo.ID %in% subflood_withsites_unique51$GEOID_Data)
sum(subflood_withsites_soc51$Population)
sum(subflood_withsites_soc51$Population.in.High.Risk.Flood.Zones)
mean(subflood_withsites_soc51$Median.Household.Income)

####NEIGHBORS OF SITES IN UAA SUB WITH PROB OF FLOOD 
subfloodsite_UTM51<- spTransform(subflood_sites_poly51,CRS("+proj=utm +datum=NAD83 +zone=12 +ellps=GRS80 +towgs84=0,0,0"))
subfloodsite_buff51<-gBuffer(subfloodsite_UTM51,width=1000,byid = TRUE)
sfs_buff51 <- spTransform(subfloodsite_buff51,CRS("+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0"))
neighbors51 <- over(sub_tract,sfs_buff51)
neighbors_ID51 <-cbind(neighbors51,sub_ID)
neighbors_all51 <-neighbors_ID51[complete.cases(neighbors_ID51),]
neighbors_poly51 <- subset(sub_tract_ID,X1.74001 %in% neighbors_all51$sub_ID)
neighbor_sub_soc51 <- subset(UAA_sub, Geo.ID %in% neighbors_poly51$GEOID_Data)
neighbors_UAA_poly51 <- subset(sub_tract_UAA, GEOID_Data %in% neighbor_sub_soc51$Geo.ID)
# SOCIAL
sum(neighbor_sub_soc51$Population)
sum(neighbor_sub_soc51$Population.in.High.Risk.Flood.Zones)
mean(neighbor_sub_soc51$Median.Household.Income) 
### NEIGHBORS ALONE
onlyneighbors_sub_social51 <- subset(neighbor_sub_soc51, !(Geo.ID %in% subflood_sites_poly51$GEOID_Data))
# SOCIAL
sum(onlyneighbors_sub_social51$Population)
sum(onlyneighbors_sub_social51$Population.in.High.Risk.Flood.Zones)
mean(onlyneighbors_sub_social51$Median.Household.Income)

####################################### CENSUS TRACTS IN URBAN AREA WITH FLOOD POTENTIAL IN 2061 #######################################
flood_prob61 <-subset(flood, X2061 > 0)
flood_sub61 <- subset(UAA_sub, Geo.ID.City %in% flood_prob61$ï..GEOID)
flood_sub_poly61 <- subset(sub_tract, GEOID_Data %in% flood_sub61$Geo.ID)

sub_flood_sites61 <- over(FC_site,flood_sub_poly61)
subflood_withsites_tot61 <-sub_flood_sites61 %>% distinct()
subflood_withsites_unique61 <- subflood_withsites_tot61[complete.cases(subflood_withsites_tot61),]
subflood_sites_poly61 <- subset(sub_tract_UAA, GEOID_Data %in% subflood_withsites_unique61$GEOID_Data)
#writeOGR(sites_in_floodsub_poly61,".","floodsites2061",driver='ESRI Shapefile')
sub_flood_sites_ID61 <- cbind(sub_flood_sites61,site_ID)
sites_in_floodsub61 <- sub_flood_sites_ID61[complete.cases(sub_flood_sites_ID61),]
sites_in_floodsub_poly61 <- subset(FC_site_ID, site_ID %in% sites_in_floodsub61$site_ID)
floodsite_poly61 <- subset(sub_tract, GEOID_Data %in% sites_in_floodsub61$GEOID_Data)
# SOCIAL 
subflood_withsites_soc61 <- subset(UAA_sub, Geo.ID %in% subflood_withsites_unique61$GEOID_Data)
sum(subflood_withsites_soc61$Population)
sum(subflood_withsites_soc61$Population.in.High.Risk.Flood.Zones)
mean(subflood_withsites_soc61$Median.Household.Income)

####NEIGHBORS OF SITES IN UAA SUB WITH PROB OF FLOOD 
subfloodsite_UTM61<- spTransform(subflood_sites_poly61,CRS("+proj=utm +datum=NAD83 +zone=12 +ellps=GRS80 +towgs84=0,0,0"))
subfloodsite_buff61<-gBuffer(subfloodsite_UTM61,width=1000,byid = TRUE)
sfs_buff61 <- spTransform(subfloodsite_buff61,CRS("+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0"))
neighbors61 <- over(sub_tract,sfs_buff61)
neighbors_ID61 <-cbind(neighbors61,sub_ID)
neighbors_all61 <-neighbors_ID61[complete.cases(neighbors_ID61),]
neighbors_poly61 <- subset(sub_tract_ID,X1.74001 %in% neighbors_all61$sub_ID)
neighbor_sub_soc61 <- subset(UAA_sub, Geo.ID %in% neighbors_poly61$GEOID_Data)
neighbors_UAA_poly61 <- subset(sub_tract_UAA, GEOID_Data %in% neighbor_sub_soc61$Geo.ID)
# SOCIAL
sum(neighbor_sub_soc61$Population)
sum(neighbor_sub_soc61$Population.in.High.Risk.Flood.Zones)
mean(neighbor_sub_soc61$Median.Household.Income)
### NEIGHBORS ALONE
onlyneighbors_sub_social61 <- subset(neighbor_sub_soc61, !(Geo.ID %in% subflood_sites_poly61$GEOID_Data))
# SOCIAL
sum(onlyneighbors_sub_social61$Population)
sum(onlyneighbors_sub_social61$Population.in.High.Risk.Flood.Zones)
mean(onlyneighbors_sub_social61$Median.Household.Income) 

######################################### ANALYSIS FOR CASE STUDIES ####################################################################

############################################ HOUSTON CASE STUDY  #######################################################################
# CENSUS  TRACTS IN HOUSTON 
houston_sub_UAA <- subset(UAA_sub, City == 'Houston')
sub_tract_UAA_houston <- subset(sub_tract, GEOID_Data %in% houston_sub_UAA$Geo.ID)
writeOGR(sub_tract_UAA_houston,".","houston_sub",driver='ESRI Shapefile')

### SITES IN HOUSTON
FC_houston <- over(FC_site,sub_tract_UAA_houston)
FC_houston_ID <- cbind(FC_houston,site_ID)
sites_houston <- FC_houston_ID[complete.cases(FC_houston_ID),]
#plotable
sites_in_houston <- subset(FC_site_ID, X1.29444 %in% sites_houston$site_ID)
writeOGR(sites_in_houston,".","houston_sites",driver='ESRI Shapefile')
### BY CENSUSTRACT
h_tot <- FC_houston %>% distinct()
h_unique <- h_tot[complete.cases(h_tot),]
# plotable
hsub_with_sites <- subset(sub_tract_UAA, GEOID_Data %in% h_unique$GEOID_Data)
writeOGR(hsub_with_sites,".","houstonsub_sites",driver='ESRI Shapefile')
# SOCIAL VARIABLES
h_soc <- subset(UAA_sub, Geo.ID %in% h_unique$GEOID_Data)
sum(h_soc$Population)
sum(h_soc$Population.in.High.Risk.Flood.Zones)
mean(h_soc$Median.Household.Income)

### SITES IN HARVEY 
FC_site_harvey_all <- over(FC,harvey_CRS)
FC_site_harveyall_ID <-cbind(FC_site_harvey_all,site_ID)
sites_harvey <- FC_site_harveyall_ID[complete.cases(FC_site_harveyall_ID),]
#plotable
sites_in_harvey <- subset(FC_site_ID, X1.29444 %in% sites_harvey$site_ID)
writeOGR(sites_in_harvey,".","harvey_sites",driver='ESRI Shapefile')
harvey_ID <- c(1:31)
sites_in_harvey_ID <- cbind(sites_in_harvey,harvey_ID)

### SITES IN HARVEY & HOUSTON
FC_hh <- over(sites_in_harvey_ID,sub_tract_UAA_houston)
FC_hh_ID <- cbind(FC_hh,harvey_ID)
sites_hh <- FC_hh_ID[complete.cases(FC_hh_ID),]
#plotable
sites_in_hh <- subset(sites_in_harvey_ID, X1.31 %in% sites_hh$harvey_ID)
writeOGR(sites_in_hh,".","houstonharvey_sites",driver='ESRI Shapefile')
### BY SUBTRACT
hh_tot <- FC_hh %>% distinct()
hh_unique <- hh_tot[complete.cases(hh_tot),]
# plotable
hhsub_with_sites <- subset(sub_tract_UAA, GEOID_Data %in% hh_unique$GEOID_Data)
writeOGR(hhsub_with_sites,".","houstonharveysub_sites",driver='ESRI Shapefile')
# SOCIAL VARIABLES
hh_soc <- subset(UAA_sub, Geo.ID %in% hh_unique$GEOID_Data)
sum(hh_soc$Population)
sum(hh_soc$Population.in.High.Risk.Flood.Zones)
mean(hh_soc$Median.Household.Income)

### SITES NOT IN HARVEY BUT IN HOUSTON
FC_hnh <- subset(sites_in_houston, !(X1.29444 %in% sites_in_hh$X1.29444))
writeOGR(FC_hnh,".","houstonnotharvey_sites",driver='ESRI Shapefile')
# BY SUBTRACT (SOME OF THESE SUBTRACTS MAY HAVE MULTIPLE SITES, ONLY WITH A PERCENTAGE OF THOSE SITES IN HARVEY)
hnh_sub <- over(FC_hnh,sub_tract_UAA_houston)
hnh_tot <- hnh_sub %>% distinct()
hnh_unique <- hnh_tot[complete.cases(hnh_tot),]
#plotable 
hnhsub_with_sites <- subset(sub_tract_UAA, GEOID_Data %in% hnh_unique$GEOID_Data)
writeOGR(hnhsub_with_sites,".","houstonnotharveysub_sites",driver='ESRI Shapefile')
# SOCIAL VARIABLES
hnh_soc <- subset(UAA_sub, Geo.ID %in% hnh_unique$GEOID_Data)
sum(hnh_soc$Population)
sum(hnh_soc$Population.in.High.Risk.Flood.Zones)
mean(hnh_soc$Median.Household.Income)

### CENSUS TRACT WITH SITE(S) IN HOUSTON NONE OF WHICH ARE IN HARVEY
hnhsub_unique <- subset(hnh_unique, !(GEOID_Data %in% hh_unique$GEOID_Data))
# plotable
hnhsub_with_sites_unique <- subset(sub_tract_UAA, GEOID_Data %in% hnhsub_unique$GEOID_Data)
writeOGR(hnhsub_with_sites_unique, ".","houstonnotharveysub_sites_unique",driver='ESRI Shapefile')
# SOCIAL VARIABLES
hnh_unique_soc <- subset(UAA_sub, Geo.ID %in% hnhsub_unique$GEOID_Data)
sum(hnh_unique_soc$Population)
sum(hnh_unique_soc$Population.in.High.Risk.Flood.Zones)
mean(hnh_unique_soc$Median.Household.Income)

### ALL OTHER CENSUS TRACTS THAT DO NOT HAVE SITES 
houston_nosite <- subset(sub_tract_UAA_houston, !(GEOID_Data %in% hsub_with_sites$GEOID_Data))
writeOGR(houston_nosite, ".","houstonsub_nosites",driver='ESRI Shapefile')
#SOCIAL VARIABLES
houstonnosite_soc <- subset(UAA_sub, Geo.ID %in% houston_nosite$GEOID_Data)
sum(houstonnosite_soc$Population)
sum(houstonnosite_soc$Population.in.High.Risk.Flood.Zones)
mean(houstonnosite_soc$Median.Household.Income)

###################################################### SANDY CASE STUDY  ###############################################################
### SITES IN NEW YORK
newyork_sub_UAA <- subset(UAA_sub, City == 'New York')
sub_tract_UAA_newyork <- subset(sub_tract, GEOID_Data %in% newyork_sub_UAA$Geo.ID)
writeOGR(sub_tract_UAA_newyork,".","newyork_sub",driver='ESRI Shapefile')
FC_newyork <- over(FC_site,sub_tract_UAA_newyork)
FC_newyork_ID <- cbind(FC_newyork,site_ID)
sites_newyork <- FC_newyork_ID[complete.cases(FC_newyork_ID),]
#plotable
sites_in_newyork <- subset(FC_site_ID, X1.29444 %in% sites_newyork$site_ID)
writeOGR(sites_in_newyork,".","newyork_sites",driver='ESRI Shapefile')

ny_tot <- FC_newyork %>% distinct()
ny_unique <- ny_tot[complete.cases(ny_tot),]
# plotable
nysub_with_sites <- subset(sub_tract_UAA, GEOID_Data %in% ny_unique$GEOID_Data)
writeOGR(nysub_with_sites,".","newyorksub_sites",driver='ESRI Shapefile')
# SOCIAL 
ny_soc <- subset(UAA_sub, Geo.ID %in% ny_unique$GEOID_Data)
sum(ny_soc$Population)
sum(ny_soc$Population.in.High.Risk.Flood.Zones)
mean(ny_soc$Median.Household.Income)

### SITES IN SANDY 
FC_site_sandy_all <- over(FC,sandy_CRS)
FC_site_sandyall_ID <-cbind(FC_site_sandy_all,site_ID)
sites_sandy <- FC_site_sandyall_ID[complete.cases(FC_site_sandyall_ID),]
#plotable
sites_in_sandy <- subset(FC_site_ID, X1.29444 %in% sites_sandy$site_ID)
writeOGR(sites_in_sandy,".","sandy_sites",driver='ESRI Shapefile')
sandy_ID <- c(1:8)
sites_in_sandy_ID <- cbind(sites_in_sandy,sandy_ID)

### SITES IN SANDY & NEWYORK
FC_nys <- over(sites_in_sandy_ID,sub_tract_UAA_newyork)
FC_nys_ID <- cbind(FC_nys,sandy_ID)
sites_nys <- FC_nys_ID[complete.cases(FC_nys_ID),]
#plotable
sites_in_nys <- subset(sites_in_sandy_ID, X1.8 %in% sites_nys$sandy_ID)
writeOGR(sites_in_nys,".","newyorksandy_sites",driver='ESRI Shapefile')
nys_tot <- FC_nys %>% distinct()
nys_unique <- nys_tot[complete.cases(nys_tot),]
# plotable
nyssub_with_sites <- subset(sub_tract_UAA, GEOID_Data %in% nys_unique$GEOID_Data)
writeOGR(nyssub_with_sites,".","newyorksandysub_sites",driver='ESRI Shapefile')
# SOCIAL VARIABLES
nys_soc <- subset(UAA_sub, Geo.ID %in% nys_unique$GEOID_Data)
sum(nys_soc$Population)
sum(nys_soc$Population.in.High.Risk.Flood.Zones)
mean(nys_soc$Median.Household.Income)

### SITES NOT IN SANDY BUT IN NEWYORK
FC_nyns <- subset(sites_in_newyork, !(X1.29444 %in% sites_in_nys$X1.29444))
writeOGR(FC_nyns,".","newyorknotsandy_sites",driver='ESRI Shapefile')
nyns_sub <- over(FC_nyns,sub_tract_UAA_newyork)
nyns_tot <- nyns_sub %>% distinct()
nyns_unique <- nyns_tot[complete.cases(nyns_tot),]
#plotable 
nynssub_with_sites <- subset(sub_tract_UAA, GEOID_Data %in% nyns_unique$GEOID_Data)
writeOGR(nynssub_with_sites,".","newyorknotsandysub_sites",driver='ESRI Shapefile')
# SOCIAL VARIABLES
nyns_soc <- subset(UAA_sub, Geo.ID %in% nyns_unique$GEOID_Data)
sum(nyns_soc$Population)
sum(nyns_soc$Population.in.High.Risk.Flood.Zones)
mean(nyns_soc$Median.Household.Income)

### CENSUS TRACT WITH SITE(S) IN NEWYORK NONE OF WHICH ARE IN SANDY
nynssub_unique <- subset(nyns_unique, !(GEOID_Data %in% nys_unique$GEOID_Data))
# plotable
nynssub_with_sites_unique <- subset(sub_tract_UAA, GEOID_Data %in% nynssub_unique$GEOID_Data)
writeOGR(nynssub_with_sites_unique, ".","newyorknotsandysub_sites_unique",driver='ESRI Shapefile')
# SOCIAL VARIABLES
nyns_unique_soc <- subset(UAA_sub, Geo.ID %in% nynssub_unique$GEOID_Data)
sum(nyns_unique_soc$Population)
sum(nyns_unique_soc$Population.in.High.Risk.Flood.Zones)
mean(nyns_unique_soc$Median.Household.Income)

### ALL OTHER SUBTRACTS THAT DO NOT HAVE SITES 
newyork_nosite <- subset(sub_tract_UAA_newyork, !(GEOID_Data %in% nysub_with_sites$GEOID_Data))
writeOGR(newyork_nosite, ".","newyorksub_nosites",driver='ESRI Shapefile')
#SOCIAL VARIABLES
newyorknosite_soc <- subset(UAA_sub, Geo.ID %in% newyork_nosite$GEOID_Data)
sum(newyorknosite_soc$Population)
sum(newyorknosite_soc$Population.in.High.Risk.Flood.Zones)
mean(newyorknosite_soc$Median.Household.Income)

########################################################################################################################################
######################################################## ADDITIONAL ANALYSES ###########################################################
# To divide census tracts that have probability of flooding into and have a contaminated site into quintiles based on probability of flood
# Example using data from 2021

#### FIRST QUINILE
flood_prob_1 <-subset(flood, X2021 > 0 & X2021 < .0027398)
flood_sub1 <- subset(UAA_sub, Geo.ID.City %in% flood_prob_1$ï..GEOID)
flood_sub_poly1 <- subset(sub_tract, GEOID_Data %in% flood_sub1$Geo.ID)
sub_flood_sites1 <- over(FC_site,flood_sub_poly1)
subflood_withsites_tot1 <- sub_flood_sites1 %>% distinct()
subflood_withsites_unique1 <- subflood_withsites_tot1[complete.cases(subflood_withsites_tot1),]
sub_flood_sites_ID1 <-cbind(sub_flood_sites1,site_ID)
sites_in_floodsub1<- sub_flood_sites_ID1[complete.cases(sub_flood_sites_ID1),]
  #SOCIAL
subflood_withsites_soc1 <- subset(UAA_sub, Geo.ID %in% subflood_withsites_unique1$GEOID_Data)
sum(subflood_withsites_soc1$Population)
sum(subflood_withsites_soc1$Population.in.High.Risk.Flood.Zones)
mean(subflood_withsites_soc1$Median.Household.Income)

#### SECOND QUINTILE
flood_prob_2 <-subset(flood, X2021 > .0027398 & X2021 < .0054796)
flood_sub2 <- subset(UAA_sub, Geo.ID.City %in% flood_prob_2$ï..GEOID)
flood_sub_poly2 <- subset(sub_tract, GEOID_Data %in% flood_sub2$Geo.ID)
sub_flood_sites2 <- over(FC_site,flood_sub_poly2)
subflood_withsites_tot2 <- sub_flood_sites2 %>% distinct()
subflood_withsites_unique2 <- subflood_withsites_tot2[complete.cases(subflood_withsites_tot2),]
sub_flood_sites_ID2 <-cbind(sub_flood_sites2,site_ID)
sites_in_floodsub2 <- sub_flood_sites_ID2[complete.cases(sub_flood_sites_ID2),]
#SOCIAL
subflood_withsites_soc2 <- subset(UAA_sub, Geo.ID %in% subflood_withsites_unique2$GEOID_Data)
sum(subflood_withsites_soc2$Population)
sum(subflood_withsites_soc2$Population.in.High.Risk.Flood.Zones)
mean(subflood_withsites_soc2$Median.Household.Income)

#### THIRD QUINTILE
flood_prob_3 <-subset(flood, X2021 > .0054796 & X2021 < .0082193)
flood_sub3 <- subset(UAA_sub, Geo.ID.City %in% flood_prob_3$ï..GEOID)
flood_sub_poly3 <- subset(sub_tract, GEOID_Data %in% flood_sub3$Geo.ID)
sub_flood_sites3 <- over(FC_site,flood_sub_poly3)
subflood_withsites_tot3 <- sub_flood_sites3 %>% distinct()
subflood_withsites_unique3 <- subflood_withsites_tot3[complete.cases(subflood_withsites_tot3),]
sub_flood_sites_ID3 <-cbind(sub_flood_sites3,site_ID)
sites_in_floodsub3 <- sub_flood_sites_ID3[complete.cases(sub_flood_sites_ID3),]
#SOCIAL
subflood_withsites_soc3 <- subset(UAA_sub, Geo.ID %in% subflood_withsites_unique3$GEOID_Data)
sum(subflood_withsites_soc3$Population)
sum(subflood_withsites_soc3$Population.in.High.Risk.Flood.Zones)
mean(subflood_withsites_soc3$Median.Household.Income)

#### FOURTH QUINTILE
flood_prob_4 <-subset(flood, X2021 > .0082193 & X2021 < .0136989)
flood_sub4 <- subset(UAA_sub, Geo.ID.City %in% flood_prob_4$ï..GEOID)
flood_sub_poly4 <- subset(sub_tract, GEOID_Data %in% flood_sub4$Geo.ID)
sub_flood_sites4 <- over(FC_site,flood_sub_poly4)
subflood_withsites_tot4 <- sub_flood_sites4 %>% distinct()
subflood_withsites_unique4 <- subflood_withsites_tot4[complete.cases(subflood_withsites_tot4),]
sub_flood_sites_ID4 <-cbind(sub_flood_sites4,site_ID)
sites_in_floodsub4 <- sub_flood_sites_ID4[complete.cases(sub_flood_sites_ID4),]
#SOCIAL
subflood_withsites_soc4 <- subset(UAA_sub, Geo.ID %in% subflood_withsites_unique4$GEOID_Data)
sum(subflood_withsites_soc4$Population)
sum(subflood_withsites_soc4$Population.in.High.Risk.Flood.Zones)
mean(subflood_withsites_soc4$Median.Household.Income)

#### FIFTH QUINTILE
flood_prob_5 <-subset(flood, X2021 > .0136989)
flood_sub5 <- subset(UAA_sub, Geo.ID.City %in% flood_prob_5$ï..GEOID)
flood_sub_poly5 <- subset(sub_tract, GEOID_Data %in% flood_sub5$Geo.ID)
sub_flood_sites5 <- over(FC_site,flood_sub_poly5)
subflood_withsites_tot5 <- sub_flood_sites5 %>% distinct()
subflood_withsites_unique5 <- subflood_withsites_tot5[complete.cases(subflood_withsites_tot5),]
sub_flood_sites_ID5 <-cbind(sub_flood_sites5,site_ID)
sites_in_floodsub5 <- sub_flood_sites_ID4[complete.cases(sub_flood_sites_ID5),]
#SOCIAL
subflood_withsites_soc5 <- subset(UAA_sub, Geo.ID %in% subflood_withsites_unique5$GEOID_Data)
sum(subflood_withsites_soc5$Population)
sum(subflood_withsites_soc5$Population.in.High.Risk.Flood.Zones)
mean(subflood_withsites_soc5$Median.Household.Income)

#####################################################################################################################################
############################################################ FIN ####################################################################
#####################################################################################################################################

